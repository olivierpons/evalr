# Generated by Django 2.2 on 2019-04-07 17:47

import app.models.generic
import colorful.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bulle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('color', colorful.fields.RGBColorField()),
                ('contour', colorful.fields.RGBColorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('reference', models.CharField(blank=True, default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=250)),
                ('duree_crossfade', models.IntegerField(blank=True, default=300, null=True)),
            ],
            options={
                'verbose_name': 'Voice: merge',
                'verbose_name_plural': 'Voice: merges',
            },
        ),
        migrations.CreateModel(
            name='GroupeBulle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bulle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Bulle', verbose_name='Bubble')),
            ],
        ),
        migrations.CreateModel(
            name='GroupeBulles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('bulles', models.ManyToManyField(blank=True, through='app.GroupeBulle', to='app.Bulle')),
            ],
            options={
                'verbose_name': 'Group of bubbles',
                'verbose_name_plural': 'Bubbles: groups of bubbles',
            },
        ),
        migrations.CreateModel(
            name='GroupeCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('groupe_bulles', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.GroupeBulles')),
            ],
            options={
                'verbose_name': 'Group of categories',
                'verbose_name_plural': 'Categories : groups of categories',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='GroupeCategoriesRegles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupecategories_1', models.ForeignKey(help_text='Groups of categories of the current word', on_delete=django.db.models.deletion.CASCADE, related_name='gc1', to='app.GroupeCategories')),
                ('groupecategories_2', models.ForeignKey(help_text='Groups of categories of the next word', on_delete=django.db.models.deletion.CASCADE, related_name='gc2', to='app.GroupeCategories')),
            ],
            options={
                'verbose_name': 'Categories: groups of categories / rule',
                'verbose_name_plural': 'Categories: groups of categories / rules',
                'ordering': ['groupecategoriesreglesregle__importance'],
            },
        ),
        migrations.CreateModel(
            name='GroupeMots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Words group',
                'verbose_name_plural': 'Words groups',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Interrogation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=150)),
                ('groupe_bulles', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.GroupeBulles')),
            ],
            options={
                'verbose_name': 'Interrogation',
                'verbose_name_plural': 'Interrogations',
                'ordering': ['user__last_name', 'user__first_name', 'description', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='ModeleInterrogation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('groupe_bulles', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.GroupeBulles')),
            ],
            options={
                'verbose_name': 'Interrogation template',
                'verbose_name_plural': 'Interrogation templates',
            },
        ),
        migrations.CreateModel(
            name='ModeleSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=150)),
                ('total', models.IntegerField(default=10, verbose_name='Number of sentences')),
                ('max_duration', models.IntegerField(default=None, null=True, verbose_name='Length (in minutes)')),
            ],
            options={
                'verbose_name': 'Template session',
                'verbose_name_plural': 'Template Sessions',
                'ordering': ['description', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Mot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('texte', models.CharField(max_length=150)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('reference', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('important_pour_dictee', models.BooleanField(default=False, verbose_name='Important')),
            ],
            options={
                'ordering': ['date_v_start'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('confirmation_code', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('groupe_bulles', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.GroupeBulles')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'ordering': ['user__last_name', 'user__first_name', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='PersonneSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Interrogation', verbose_name='Interro ref.')),
                ('modele', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ModeleSession', verbose_name='Session ref.')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.People', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Interrogation: session of persons',
                'verbose_name_plural': 'Interrogation: sessions of persons',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='PersonneSessionPhrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('fichier_audio', models.FileField(blank=True, default=None, null=True, upload_to='')),
            ],
            options={
                'ordering': ['date_v_start'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('duree_silence_debut', models.DecimalField(blank=True, decimal_places=2, default=0.3, max_digits=3, verbose_name='Silence length (start of the sentence)')),
                ('duree_silence_fin', models.DecimalField(blank=True, decimal_places=2, default=0.3, max_digits=3, verbose_name='Silence length (end of the sentence)')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('filename_original', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('file_field', models.FileField(blank=True, default=None, null=True, upload_to=app.models.generic.BaseFileModel.generate_filename)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GravatarFile',
            fields=[
                ('picture_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Picture')),
            ],
            options={
                'abstract': False,
            },
            bases=('app.picture',),
        ),
        migrations.CreateModel(
            name='Voix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=150)),
                ('fichier_audio', models.FileField(upload_to='')),
                ('fusion_avec_suivant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Fusion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Voice',
                'verbose_name_plural': 'Voices',
                'ordering': ['user__last_name', 'user__first_name', 'description', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Regle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('exemple_src', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('exemple_dst', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('mot_courant_regle', models.IntegerField(choices=[(0, '... starts with'), (1, '... ends with'), (2, "... doesn't start with"), (3, "... doesn't end with")], default=0, verbose_name='Rule')),
                ('mot_courant_filtre', models.CharField(max_length=1250)),
                ('mot_courant_filtre_est_lettre', models.BooleanField(default=False, help_text="Ex.: letters: 'ùûüÿAE', words: 'un|des|les|ces'", verbose_name='letters (un-checked) or words (checked)')),
                ('mot_courant_case_insensible', models.BooleanField(default=False, verbose_name='Not case sensitive')),
                ('mot_suivant_regle', models.IntegerField(choices=[(0, '... starts with'), (1, '... ends with'), (2, "... doesn't start with"), (3, "... doesn't end with")], default=0, verbose_name='Rule')),
                ('mot_suivant_filtre', models.CharField(max_length=1250)),
                ('mot_suivant_filtre_est_lettre', models.BooleanField(default=False, help_text="Ex.: letters: 'ùûüÿAE', words: 'un|des|les|ces'", verbose_name='letters (un-checked) or words (checked)')),
                ('mot_suivant_case_insensible', models.BooleanField(default=False, verbose_name='Not case sensitive')),
                ('mot_remplacant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Mot')),
            ],
            options={
                'verbose_name': 'Rule',
                'verbose_name_plural': 'Rules',
            },
        ),
        migrations.CreateModel(
            name='PhraseGroupeCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordre', models.IntegerField(default=1)),
                ('groupe_categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GroupeCategories')),
                ('phrase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Phrase')),
            ],
            options={
                'verbose_name': 'Sentence: group of categories',
                'verbose_name_plural': 'Sentence: groups of categories',
                'ordering': ['ordre'],
            },
        ),
        migrations.AddField(
            model_name='phrase',
            name='groupes_categories',
            field=models.ManyToManyField(blank=True, related_name='phrase', through='app.PhraseGroupeCategories', to='app.GroupeCategories'),
        ),
        migrations.CreateModel(
            name='PersonneSessionPhraseMot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('ordre', models.IntegerField()),
                ('etat', models.IntegerField(choices=[(1, 'To be done'), (2, 'Done')], default=1)),
                ('date_correction', models.DateTimeField(default=django.utils.timezone.now)),
                ('est_valide', models.BooleanField(default=False, verbose_name='Valid')),
                ('correcteur', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.People')),
                ('mot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Mot')),
                ('psp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PersonneSessionPhrase')),
            ],
            options={
                'ordering': ['psp', 'mot__texte', 'ordre'],
            },
        ),
        migrations.AddField(
            model_name='personnesessionphrase',
            name='phrase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Phrase'),
        ),
        migrations.AddField(
            model_name='personnesessionphrase',
            name='ps',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PersonneSession'),
        ),
        migrations.AddField(
            model_name='personnesession',
            name='phrases',
            field=models.ManyToManyField(blank=True, related_name='session', through='app.PersonneSessionPhrase', to='app.Phrase'),
        ),
        migrations.CreateModel(
            name='PeopleLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date C.')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Date M.')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('type_relation', models.IntegerField(choices=[(1, 'Parent > child'), (2, 'Husband <> Wife'), (3, 'Teacher > student')], default=3)),
                ('is_reverse', models.BooleanField(default=False)),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dst', to='app.People')),
                ('opposite', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PeopleLink')),
                ('src', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='src', to='app.People')),
            ],
            options={
                'verbose_name': 'Relation',
                'verbose_name_plural': 'Relations',
            },
        ),
        migrations.AddField(
            model_name='people',
            name='relations',
            field=models.ManyToManyField(through='app.PeopleLink', to='app.People'),
        ),
        migrations.AddField(
            model_name='people',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MotVoix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Mot')),
                ('voix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Voix')),
            ],
            options={
                'verbose_name': 'Word voice',
                'verbose_name_plural': 'Word voices',
            },
        ),
        migrations.CreateModel(
            name='MotGroupeCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupe_categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GroupeCategories')),
                ('mot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Mot')),
            ],
            options={
                'verbose_name': 'Word: group of categories',
                'verbose_name_plural': 'Word: groups of categories',
            },
        ),
        migrations.AddField(
            model_name='mot',
            name='groupes_categories',
            field=models.ManyToManyField(blank=True, related_name='mot', through='app.MotGroupeCategories', to='app.GroupeCategories'),
        ),
        migrations.AddField(
            model_name='mot',
            name='voix',
            field=models.ManyToManyField(blank=True, related_name='mot', through='app.MotVoix', to='app.Voix'),
        ),
        migrations.CreateModel(
            name='ModeleInterrogationPhrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.IntegerField(default=1)),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ModeleInterrogation')),
                ('phrase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Phrase')),
            ],
            options={
                'verbose_name': 'Interrogation sentence',
                'verbose_name_plural': 'Interrogations sentences',
                'ordering': ['importance'],
            },
        ),
        migrations.CreateModel(
            name='ModeleInterrogationGroupeMots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupe_mots', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GroupeMots')),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ModeleInterrogation')),
            ],
            options={
                'verbose_name': 'Interrogation - group of words',
                'verbose_name_plural': 'Interrogation - groups of words',
            },
        ),
        migrations.AddField(
            model_name='modeleinterrogation',
            name='groupes_mots',
            field=models.ManyToManyField(blank=True, related_name='mot', through='app.ModeleInterrogationGroupeMots', to='app.GroupeMots'),
        ),
        migrations.AddField(
            model_name='modeleinterrogation',
            name='phrases',
            field=models.ManyToManyField(blank=True, related_name='phrase', through='app.ModeleInterrogationPhrase', to='app.Phrase'),
        ),
        migrations.CreateModel(
            name='InterrogationPersonne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Interrogation')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.People')),
            ],
            options={
                'verbose_name': 'Person interrogation',
                'verbose_name_plural': 'Person interrogations',
            },
        ),
        migrations.AddField(
            model_name='interrogation',
            name='modele',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ModeleInterrogation', verbose_name='Interrogation template'),
        ),
        migrations.AddField(
            model_name='interrogation',
            name='personnes',
            field=models.ManyToManyField(blank=True, related_name='interrogations', through='app.InterrogationPersonne', to='app.People', verbose_name='Persons'),
        ),
        migrations.AddField(
            model_name='interrogation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='groupemots',
            name='mots',
            field=models.ManyToManyField(blank=True, to='app.Mot'),
        ),
        migrations.CreateModel(
            name='GroupeCategoriesReglesRegle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.IntegerField(default=1)),
                ('groupecategoriesregles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GroupeCategoriesRegles')),
                ('regle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Regle')),
            ],
        ),
        migrations.AddField(
            model_name='groupecategoriesregles',
            name='regles',
            field=models.ManyToManyField(blank=True, related_name='groupecategoriesregle_regle', through='app.GroupeCategoriesReglesRegle', to='app.Regle'),
        ),
        migrations.CreateModel(
            name='GroupeCategoriesCategorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorie', to='app.Categorie', verbose_name='Category')),
                ('groupe_categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupe', to='app.GroupeCategories', verbose_name='Group')),
            ],
        ),
        migrations.AddField(
            model_name='groupecategories',
            name='liens',
            field=models.ManyToManyField(blank=True, related_name='groupe_categories', through='app.GroupeCategoriesCategorie', to='app.Categorie'),
        ),
        migrations.AddField(
            model_name='groupebulle',
            name='groupe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GroupeBulles', verbose_name='Group'),
        ),
        migrations.CreateModel(
            name='CategorieLien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorie_dst', to='app.Categorie', verbose_name='Dst link')),
                ('src', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorie_src', to='app.Categorie', verbose_name='Src link')),
            ],
        ),
        migrations.AddField(
            model_name='categorie',
            name='groupe_bulles',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.GroupeBulles'),
        ),
        migrations.AddField(
            model_name='categorie',
            name='liens',
            field=models.ManyToManyField(blank=True, related_name='parent', through='app.CategorieLien', to='app.Categorie'),
        ),
        migrations.AddField(
            model_name='people',
            name='gravatar',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.GravatarFile'),
        ),
    ]
