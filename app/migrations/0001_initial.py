# Generated by Django 3.1.5 on 2021-01-12 09:39

import colorful.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0014_auto_20210112_0739'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bulle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('color', colorful.fields.RGBColorField()),
                ('contour', colorful.fields.RGBColorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriesGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Group of categories',
                'verbose_name_plural': 'Groups of categories',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('reference', models.CharField(blank=True, default=None, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='EntitiesGroupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('name', models.CharField(blank=True, default='(no type)', max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Entities group type',
                'verbose_name_plural': 'Entities group types',
            },
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('generate_voice', models.BooleanField(default=True, verbose_name='Generate if no file')),
                ('generate_voice_language', models.CharField(blank=True, default=None, max_length=8, null=True, verbose_name='Language')),
                ('texte', models.CharField(max_length=150)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('reference', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('important', models.BooleanField(default=False, verbose_name='Important')),
            ],
            options={
                'ordering': ['date_v_start'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=250)),
                ('crossfade_length', models.IntegerField(blank=True, default=300, null=True)),
            ],
            options={
                'verbose_name': 'Voice: merge',
                'verbose_name_plural': 'Voice: merges',
            },
        ),
        migrations.CreateModel(
            name='GravatarFile',
            fields=[
                ('imagefile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.imagefile')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.imagefile',),
        ),
        migrations.CreateModel(
            name='GroupeBulle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bulle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.bulle', verbose_name='Bubble')),
            ],
        ),
        migrations.CreateModel(
            name='GroupeBulles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('bulles', models.ManyToManyField(blank=True, through='app.GroupeBulle', to='app.Bulle')),
            ],
            options={
                'verbose_name': 'Group of bubbles',
                'verbose_name_plural': 'Bubbles: groups of bubbles',
            },
        ),
        migrations.CreateModel(
            name='GroupeCategoriesRegles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoriesgroup_1', models.ForeignKey(help_text='Groups of categories of the current expression', on_delete=django.db.models.deletion.CASCADE, related_name='gc1', to='app.categoriesgroup')),
                ('categoriesgroup_2', models.ForeignKey(help_text='Groups of categories of the next expression', on_delete=django.db.models.deletion.CASCADE, related_name='gc2', to='app.categoriesgroup')),
            ],
            options={
                'verbose_name': 'Categories: groups of categories / rule',
                'verbose_name_plural': 'Categories: groups of categories / rules',
                'ordering': ['groupecategoriesreglesregle__importance'],
            },
        ),
        migrations.CreateModel(
            name='GroupExpressions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('expressions', models.ManyToManyField(blank=True, to='app.Expression')),
            ],
            options={
                'verbose_name': 'Expressions group',
                'verbose_name_plural': 'Expressions groups',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Interrogation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=150)),
                ('groupe_bulles', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.groupebulles')),
            ],
            options={
                'verbose_name': 'Interrogation',
                'verbose_name_plural': 'Interrogations',
                'ordering': ['user__last_name', 'user__first_name', 'description', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Langue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('nom', models.CharField(max_length=50)),
                ('nom_local', models.CharField(default='', max_length=50)),
                ('locale', models.CharField(max_length=5)),
                ('bidirectionnel', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Languages',
                'ordering': ['date_v_start'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModeleInterrogation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150)),
                ('groupe_bulles', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.groupebulles')),
            ],
            options={
                'verbose_name': 'Exam template',
                'verbose_name_plural': 'Exam templates',
            },
        ),
        migrations.CreateModel(
            name='ModeleSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=150)),
                ('total', models.IntegerField(default=10, verbose_name='Number of sentences')),
                ('max_duration', models.IntegerField(default=None, null=True, verbose_name='Length (in minutes)')),
            ],
            options={
                'verbose_name': 'Exam template - Session',
                'verbose_name_plural': 'Exam template - Sessions',
                'ordering': ['description', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.entity')),
                ('confirmation_code', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('reset_code', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('gravatar', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.gravatarfile')),
                ('groupe_bulles', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.groupebulles')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'ordering': ['user__last_name', 'user__first_name', 'pk'],
            },
            bases=('core.entity',),
        ),
        migrations.CreateModel(
            name='PersonneSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.interrogation', verbose_name='Interro ref.')),
                ('modele', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.modelesession', verbose_name='Session ref.')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Interrogation: session of a person',
                'verbose_name_plural': 'Interrogation: sessions of a person',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='PersonneSessionPhrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('fichier_audio', models.FileField(blank=True, default=None, null=True, upload_to='')),
            ],
            options={
                'ordering': ['date_v_start'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('exemple', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('duree_silence_debut', models.DecimalField(blank=True, decimal_places=2, default=0.3, max_digits=3, verbose_name='Silence length (start of the sentence)')),
                ('duree_silence_fin', models.DecimalField(blank=True, decimal_places=2, default=0.3, max_digits=3, verbose_name='Silence length (end of the sentence)')),
            ],
        ),
        migrations.CreateModel(
            name='Voix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('description', models.CharField(max_length=150)),
                ('fichier_audio', models.FileField(upload_to='')),
                ('fusion_avec_suivant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.fusion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Voice',
                'verbose_name_plural': 'Voices',
                'ordering': ['user__last_name', 'user__first_name', 'description', 'pk'],
            },
        ),
        migrations.CreateModel(
            name='Regle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('exemple_src', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('exemple_dst', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('mot_courant_regle', models.IntegerField(choices=[(0, '... starts with'), (1, '... ends with'), (2, "... doesn't start with"), (3, "... doesn't end with")], default=0, verbose_name='Rule')),
                ('mot_courant_filtre', models.CharField(max_length=1250)),
                ('mot_courant_filtre_est_lettre', models.BooleanField(default=False, help_text="Ex.: letters: 'ùûüÿAE', words: 'un|des|les|ces'", verbose_name='letters (un-checked) or words (checked)')),
                ('mot_courant_case_insensible', models.BooleanField(default=False, verbose_name='Not case sensitive')),
                ('mot_suivant_regle', models.IntegerField(choices=[(0, '... starts with'), (1, '... ends with'), (2, "... doesn't start with"), (3, "... doesn't end with")], default=0, verbose_name='Rule')),
                ('mot_suivant_filtre', models.CharField(max_length=1250)),
                ('mot_suivant_filtre_est_lettre', models.BooleanField(default=False, help_text="Ex.: letters: 'ùûüÿAE', words: 'un|des|les|ces'", verbose_name='letters (un-checked) or words (checked)')),
                ('mot_suivant_case_insensible', models.BooleanField(default=False, verbose_name='Not case sensitive')),
                ('mot_remplacant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.expression')),
            ],
            options={
                'verbose_name': 'Rule',
                'verbose_name_plural': 'Rules',
            },
        ),
        migrations.CreateModel(
            name='PhraseGroupeCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordre', models.IntegerField(default=1)),
                ('group_categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.categoriesgroup')),
                ('phrase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.phrase')),
            ],
            options={
                'verbose_name': 'Sentence: group of categories',
                'verbose_name_plural': 'Sentence: groups of categories',
                'ordering': ['ordre'],
            },
        ),
        migrations.AddField(
            model_name='phrase',
            name='categories_groups',
            field=models.ManyToManyField(blank=True, related_name='phrase', through='app.PhraseGroupeCategories', to='app.CategoriesGroup'),
        ),
        migrations.CreateModel(
            name='PersonProfession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.person')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.profession')),
            ],
            options={
                'ordering': ['date_v_start'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneSessionPhraseMot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('ordre', models.IntegerField()),
                ('etat', models.IntegerField(choices=[(1, 'To be done'), (2, 'Done')], default=1)),
                ('date_correction', models.DateTimeField(default=django.utils.timezone.now)),
                ('est_valide', models.BooleanField(default=False, verbose_name='Valid')),
                ('correcteur', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.person')),
                ('mot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.expression')),
                ('psp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.personnesessionphrase')),
            ],
            options={
                'ordering': ['psp', 'mot__texte', 'ordre'],
            },
        ),
        migrations.AddField(
            model_name='personnesessionphrase',
            name='phrase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.phrase'),
        ),
        migrations.AddField(
            model_name='personnesessionphrase',
            name='ps',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.personnesession'),
        ),
        migrations.AddField(
            model_name='personnesession',
            name='phrases',
            field=models.ManyToManyField(blank=True, related_name='session', through='app.PersonneSessionPhrase', to='app.Phrase'),
        ),
        migrations.CreateModel(
            name='PersonConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_end', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('used', models.BooleanField(default=False)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_confirmation', to='app.person')),
            ],
            options={
                'ordering': ['date_v_start'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotGroupeCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.expression')),
                ('group_categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.categoriesgroup')),
            ],
            options={
                'verbose_name': 'Expression: group of categories',
                'verbose_name_plural': 'Expression: groups of categories',
            },
        ),
        migrations.CreateModel(
            name='ModeleInterrogationPhrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.IntegerField(default=1)),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.modeleinterrogation')),
                ('phrase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.phrase')),
            ],
            options={
                'verbose_name': 'Exam template - sentence',
                'verbose_name_plural': 'Exam template - sentences',
                'ordering': ['importance'],
            },
        ),
        migrations.CreateModel(
            name='ModeleInterrogationGroupExpressions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupe_expressions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.groupexpressions')),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.modeleinterrogation')),
            ],
            options={
                'verbose_name': 'Exam template - group of expressions',
                'verbose_name_plural': 'Exam template - groups of expressions',
            },
        ),
        migrations.AddField(
            model_name='modeleinterrogation',
            name='groupes_mots',
            field=models.ManyToManyField(blank=True, related_name='mot', through='app.ModeleInterrogationGroupExpressions', to='app.GroupExpressions'),
        ),
        migrations.AddField(
            model_name='modeleinterrogation',
            name='phrases',
            field=models.ManyToManyField(blank=True, related_name='phrase', through='app.ModeleInterrogationPhrase', to='app.Phrase'),
        ),
        migrations.CreateModel(
            name='InterrogationPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interrogation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.interrogation')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.person')),
            ],
            options={
                'verbose_name': 'Person interrogation',
                'verbose_name_plural': 'Person interrogations',
            },
        ),
        migrations.AddField(
            model_name='interrogation',
            name='modele',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.modeleinterrogation', verbose_name='Interrogation template'),
        ),
        migrations.AddField(
            model_name='interrogation',
            name='persons',
            field=models.ManyToManyField(blank=True, related_name='interrogations', through='app.InterrogationPerson', to='app.Person', verbose_name='Persons'),
        ),
        migrations.AddField(
            model_name='interrogation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.CreateModel(
            name='GroupeCategoriesReglesRegle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.IntegerField(default=1)),
                ('groupecategoriesregles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.groupecategoriesregles')),
                ('regle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.regle')),
            ],
        ),
        migrations.AddField(
            model_name='groupecategoriesregles',
            name='regles',
            field=models.ManyToManyField(blank=True, related_name='groupecategoriesregle_regle', through='app.GroupeCategoriesReglesRegle', to='app.Regle'),
        ),
        migrations.AddField(
            model_name='groupebulle',
            name='groupe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.groupebulles', verbose_name='Group'),
        ),
        migrations.CreateModel(
            name='ExpressionVoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.expression')),
                ('voix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.voix')),
            ],
            options={
                'verbose_name': 'Expression voice',
                'verbose_name_plural': 'Expression voices',
            },
        ),
        migrations.AddField(
            model_name='expression',
            name='categories_groups',
            field=models.ManyToManyField(blank=True, related_name='mot', through='app.MotGroupeCategories', to='app.CategoriesGroup'),
        ),
        migrations.AddField(
            model_name='expression',
            name='voices',
            field=models.ManyToManyField(blank=True, related_name='mot', through='app.ExpressionVoice', to='app.Voix'),
        ),
        migrations.CreateModel(
            name='EntitiesGroup',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.entity')),
                ('name', models.CharField(blank=True, default='(no name)', max_length=200, null=True)),
                ('entities_group_type', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.entitiesgrouptype')),
            ],
            options={
                'verbose_name': 'Entities group',
                'verbose_name_plural': 'Entities groups',
                'ordering': ['entities_group_type__name', 'name', 'date_v_start', 'date_last_modif', 'date_creation', 'pk'],
            },
            bases=('core.entity',),
        ),
        migrations.CreateModel(
            name='CategoryLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_dst', to='app.category', verbose_name='Dst link')),
                ('src', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_src', to='app.category', verbose_name='Src link')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='groupe_bulles',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.groupebulles'),
        ),
        migrations.AddField(
            model_name='category',
            name='links',
            field=models.ManyToManyField(blank=True, related_name='parent', through='app.CategoryLink', to='app.Category'),
        ),
        migrations.CreateModel(
            name='CategoriesGroupCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='app.category', verbose_name='Category')),
                ('group_categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group', to='app.categoriesgroup', verbose_name='Group')),
            ],
        ),
        migrations.AddField(
            model_name='categoriesgroup',
            name='groupe_bulles',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.groupebulles'),
        ),
        migrations.AddField(
            model_name='categoriesgroup',
            name='links',
            field=models.ManyToManyField(blank=True, related_name='group_categories', through='app.CategoriesGroupCategory', to='app.Category'),
        ),
        migrations.CreateModel(
            name='AccessRight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(blank=True, db_index=True, default=None, max_length=50)),
                ('row_id', models.PositiveIntegerField(blank=True, default=None)),
                ('right', models.IntegerField(choices=[(1, 'Read (R)'), (2, 'Write (W)'), (3, 'Read/Write (RW)')], default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
